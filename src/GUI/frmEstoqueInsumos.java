/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Beans.ListCategoriaInsumos;
import Beans.ListFazendasBeans;
import DAO.Diversas;
import static GUI.Principal.ListFazPermitidas;
import static GUI.Principal.listCategoriaInsumos;
import Icones.FormatarICO;
import TableModel.TableModelEstoqueInsumo;
import TableModel.TbEstoqueInsumosBeans;
import Utilitarios.CentralizarTabela;
import Utilitarios.Conexao;
import Utilitarios.Corretores;
import com.toedter.calendar.JDateChooser;
import java.awt.Component;
import java.awt.event.MouseEvent;
import java.io.File;
import java.math.BigDecimal;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.ToolTipManager;
import javax.swing.table.DefaultTableCellRenderer;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author agroa
 */
public class frmEstoqueInsumos extends javax.swing.JInternalFrame {

    TableModelEstoqueInsumo TbEstoque;
    Diversas DiversasD;
    CentralizarTabela Centralizar;
    CellRenderer CellRenderer;

    public frmEstoqueInsumos() {
        initComponents();
        DiversasD = new Diversas();
        carregarTabela();
        carregarCategorias();
        carregarFazPermitidas();
        txt_dtInicial.setDate(Corretores.PrimeiroDiaMes());
        txt_dtFinal.setDate(getDataAtual());

    }

    private JTable carregarTabela() {
        tb_estoque.setModel(getTableModel());
        Centralizar = new CentralizarTabela();
        CellRenderer = new CellRenderer();
        Centralizar.centralizarTabela(tb_estoque);
        ((DefaultTableCellRenderer) tb_estoque.getTableHeader().getDefaultRenderer()).setHorizontalAlignment(SwingConstants.CENTER);
        tb_estoque.getColumnModel().getColumn(4).setCellRenderer(CellRenderer);
        tb_estoque.getColumnModel().getColumn(5).setCellRenderer(CellRenderer);
        tb_estoque.getColumnModel().getColumn(6).setCellRenderer(CellRenderer);
        tb_estoque.getColumnModel().getColumn(7).setCellRenderer(CellRenderer);
        tb_estoque.getColumnModel().getColumn(8).setCellRenderer(CellRenderer);
        return tb_estoque;
    }

    private TableModelEstoqueInsumo getTableModel() {
        if (TbEstoque == null) {
            TbEstoque = new TableModelEstoqueInsumo();
        }
        return TbEstoque;
    }

    private void carregarFazPermitidas() {
        ListFazPermitidas = new ArrayList<>();
        if (ListFazPermitidas.isEmpty()) {
            ListFazPermitidas = DiversasD.ListpmFazenda();
        }
        ListFazendasBeans l = new ListFazendasBeans();
        l.setID(0);
        l.setNomeFazenda("-");
        cb_fazenda.addItem(l);
        for (ListFazendasBeans list : ListFazPermitidas) {
            cb_fazenda.addItem(list);
        }
    }

    private void carregarCategorias() {

        if (listCategoriaInsumos == null) {
            listCategoriaInsumos = new ArrayList<>();
            listCategoriaInsumos = DiversasD.listCategoriaInsumos();
        }
        cb_categoria.addItem("-");
        for (ListCategoriaInsumos list : listCategoriaInsumos) {
            cb_categoria.addItem(list);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        javax.swing.JLabel jLabel2 = new javax.swing.JLabel();
        txt_dtInicial =  new JDateChooser("dd/MM/yyyy", "##/##/#####", '_');
        javax.swing.JLabel jLabel3 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel4 = new javax.swing.JLabel();
        txt_insumo = new javax.swing.JTextField();
        javax.swing.JLabel jLabel5 = new javax.swing.JLabel();
        cb_fazenda = new javax.swing.JComboBox<>();
        brn_pesquisar = new javax.swing.JButton();
        cb_condEstoque = new javax.swing.JComboBox<>();
        cb_categoria = new javax.swing.JComboBox<>();
        txt_dtFinal =  new JDateChooser("dd/MM/yyyy", "##/##/#####", '_');
        btn_imprimir = new javax.swing.JButton();
        javax.swing.JLabel jLabel6 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tb_estoque = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Estoque de Insumos");
        setMaximumSize(new java.awt.Dimension(1100, 680));
        setPreferredSize(new java.awt.Dimension(900, 644));

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Data Inicial");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Categoria");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Produto");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Fazenda");

        brn_pesquisar.setText("Pesquisar");
        brn_pesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                brn_pesquisarActionPerformed(evt);
            }
        });

        cb_condEstoque.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Estoque > 0", "Estoque < 0", "Estoque = 0", "Todos" }));
        cb_condEstoque.setSelectedIndex(3);

        btn_imprimir.setText("Imprimir");
        btn_imprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_imprimirActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("Condição");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Data Final");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txt_dtFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_dtInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cb_fazenda, 0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_insumo)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cb_categoria, 0, 0, Short.MAX_VALUE)
                    .addComponent(cb_condEstoque, 0, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(brn_pesquisar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_imprimir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(12, 12, 12))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel2)
                    .addComponent(txt_dtInicial, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(cb_fazenda, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(brn_pesquisar)
                    .addComponent(cb_categoria, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel7)
                    .addComponent(txt_dtFinal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txt_insumo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(cb_condEstoque, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_imprimir))
                .addContainerGap())
        );

        jScrollPane1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tb_estoque.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tb_estoque.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tb_estoqueMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tb_estoque);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 499, Short.MAX_VALUE)
                .addContainerGap())
        );

        setBounds(0, 0, 900, 640);
    }// </editor-fold>//GEN-END:initComponents

    private void brn_pesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_brn_pesquisarActionPerformed
        if (txt_dtInicial.getDate() != null || txt_dtFinal.getDate() != null) {
            buscarEstoque();
        } else {
            JOptionPane.showMessageDialog(null, "Selecione um intervalo de data! ", "Erro!", 0, FormatarICO.ICObtnSair());
        }
    }//GEN-LAST:event_brn_pesquisarActionPerformed
 
    private void btn_imprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_imprimirActionPerformed
        int confirma = JOptionPane.showConfirmDialog(null, "Deseja gerar o relatório de estoque?", "Atenção", JOptionPane.YES_NO_OPTION);
        Conexao.ReiniciarCon();
        if (confirma == JOptionPane.YES_OPTION) {
            Map p = new HashMap();
            JasperReport relatorio;
            JasperPrint impressao;
            JasperViewer jrviewer = null;
            try {
                p.put("dtInicial", txt_dtInicial.getDate());
                p.put("dtFinal", txt_dtFinal.getDate());
                p.put("SqlWhere", getSQLWhere());
                relatorio = JasperCompileManager.compileReport(new File("").getClass().getResourceAsStream("/Relatorios/estoqueInsumo.jrxml"));
                impressao = JasperFillManager.fillReport(relatorio, p, Conexao.getConnection());
                jrviewer = new JasperViewer(impressao, false);
                jrviewer.setVisible(true);
                jrviewer.toFront();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
            jrviewer.toFront();
        }
    }//GEN-LAST:event_btn_imprimirActionPerformed

    private void tb_estoqueMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tb_estoqueMouseClicked
        if (evt.getButton() == MouseEvent.BUTTON3){
            TipTextTbCompras();
        } else {
            tb_estoque.setToolTipText(null);
        }
    }//GEN-LAST:event_tb_estoqueMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton brn_pesquisar;
    private javax.swing.JButton btn_imprimir;
    private javax.swing.JComboBox<Object> cb_categoria;
    private javax.swing.JComboBox<String> cb_condEstoque;
    private javax.swing.JComboBox<ListFazendasBeans> cb_fazenda;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tb_estoque;
    private com.toedter.calendar.JDateChooser txt_dtFinal;
    private com.toedter.calendar.JDateChooser txt_dtInicial;
    private javax.swing.JTextField txt_insumo;
    // End of variables declaration//GEN-END:variables

    private void buscarEstoque() {
        Conexao.ReiniciarCon();
        String SQLSelect = "select ci.cad_ins_id as IdInsumo,\n"
                + "ci.cad_ins_nome as Insumo,\n"
                + "ci.cad_ins_categoria as Categoria,\n"
                + "\n"
                + "(select cf.cad_fazendas_nome from cad_fazendas cf where cf.cad_fazendas_id = ei2.ent_ins_idFazenda) as Fazenda,\n"
                + "			(SELECT SUM(ei.ent_ins_quant) \n"
                + "			FROM ent_insumo ei \n"
                + "            WHERE ei.ent_ins_idInsumo = IdInsumo AND ei.ent_ins_idFazenda = cf.cad_fazendas_id AND ei.ent_ins_dtEntr Between ? AND ?) as EntradaPeriodo,\n"
                + "\n"
                + "			IFNULL((SELECT SUM(si.quantidade) \n"
                + "			FROM saida_insumos si, saida_insumos_doc sd \n"
                + "            WHERE sd.id = si.id_documento and sd.idLocalEstoque = cf.cad_fazendas_id AND si.id_insumo = IdInsumo AND sd.data_saida Between ? AND ?),0) as SaidaPeriodo,\n"
                + "\n"
                + "@EntradaT:= (SELECT SUM(ei.ent_ins_quant) \n"
                + "			FROM ent_insumo ei \n"
                + "            WHERE ei.ent_ins_idInsumo = IdInsumo AND ei.ent_ins_idFazenda = cf.cad_fazendas_id AND ei.ent_ins_dtEntr <= ?) as EntradaTotal,\n"
                + "\n"
                + "@SaidaT:= ifnull((SELECT SUM(si.quantidade) \n"
                + "			FROM saida_insumos si, saida_insumos_doc sd \n"
                + "            WHERE sd.id = si.id_documento and sd.idLocalEstoque = cf.cad_fazendas_id AND si.id_insumo = IdInsumo AND sd.data_saida <= ?),0) as SaidaTotal,\n"
                + "\n"
                + "@EstFinal:= Round((@EntradaT - @SaidaT),3) as Estoque,\n"
                + "ci.cad_ins_doseMed as DoseMedia,\n"
                + "Round(IF(ci.cad_ins_doseMed > 0, @EstFinal/ci.cad_ins_doseMed ,0)) as AreaAplicavel\n"
                + "\n"
                + "FROM cad_insumos ci, ent_insumo ei2, cad_fazendas cf "
                + "WHERE ci.cad_ins_id = ei2.ent_ins_idInsumo and ei2.ent_ins_idFazenda = cf.cad_fazendas_id " + getSQLWhere() + "\n"
                + "GROUP BY IdInsumo, Insumo, Categoria, Fazenda\n"
                + getCondicaoEstoque() + " \n"
                + "ORDER BY IdInsumo;";
        try {
            PreparedStatement st = Conexao.getConnection().prepareStatement(SQLSelect);
            st.setString(1, getDtInicial());
            st.setString(2, getDtFinal());
            st.setString(3, getDtInicial());
            st.setString(4, getDtFinal());
            st.setString(5, getDtFinal());
            st.setString(6, getDtFinal());

            ResultSet rs = st.executeQuery();
            List<TbEstoqueInsumosBeans> list = new ArrayList<>();
            TbEstoque.limpar();
            while (rs.next()) {
                TbEstoqueInsumosBeans b = new TbEstoqueInsumosBeans();
                b.setID(rs.getInt("IdInsumo"));
                b.setInsumo(rs.getString("Insumo"));
                b.setCategoria(rs.getString("Categoria"));
                b.setFazenda(rs.getString("Fazenda"));
                b.setEntradaPeriodo(rs.getDouble("EntradaPeriodo"));
                b.setSaidaPeriodo(rs.getDouble("SaidaPeriodo"));
                b.setEstoque(rs.getDouble("Estoque"));
                b.setDoseMedia(rs.getDouble("DoseMedia"));
                b.setAreaAplicavel(rs.getDouble("AreaAplicavel"));
                list.add(b);
            }
            TbEstoque.addLista(list);

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex + " ", "Erro ao buscar estoque!", 0, FormatarICO.ICObtnSair());
        }
    }

    private String getDtInicial() {
        String dtInicial = new SimpleDateFormat("dd/MM/yyyy").format(txt_dtInicial.getDate());
        return Corretores.ConverterParaSQL(dtInicial);
    }

    private String getDtFinal() {
        String dtFinal = new SimpleDateFormat("dd/MM/yyyy").format(txt_dtFinal.getDate());
        return Corretores.ConverterParaSQL(dtFinal);
    }

    private String getSQLWhere() {
        String s = "";
        if (!txt_insumo.getText().equals("")) {
            s = " and ci.cad_ins_nome like '%" + txt_insumo.getText() + "%' ";
        }
        if (cb_categoria.getSelectedIndex() > 0) {
            s = " and ci.cad_idCategoria = " + getIdCategoria(cb_categoria);
        }
        if (cb_fazenda.getSelectedIndex() == 0) {
            s += " and cf.cad_fazendas_id IN (" + getListFazendas() + ")";
        } else {
            s += " and cf.cad_fazendas_id = " + getIdLocalEstoque(cb_fazenda) + " ";
        }
        return s;
    }

    private Integer getIdCategoria(JComboBox comboBox) {
        if (comboBox.getSelectedIndex() != 0) {
            return listCategoriaInsumos.get(comboBox.getSelectedIndex() - 1).getID();
        }
        return 0;
    }

    private String getListFazendas() {
        String s = "";
        for (int i = 0; i < ListFazPermitidas.size(); i++) {
            s += "," + String.valueOf(ListFazPermitidas.get(i).getID());
        }
        s = s.replaceFirst(",", "");
        return s;
    }

    private Integer getIdLocalEstoque(JComboBox comboBox) {
        if (comboBox.getSelectedIndex() != 0) {
            return ListFazPermitidas.get(comboBox.getSelectedIndex() - 1).getID();
        }
        return 0;
    }

    private String getCondicaoEstoque() {
        String s = "";
        if (cb_condEstoque.getSelectedItem().equals("Estoque > 0")) {
            s = " HAVING Estoque  > 0";
        } else if (cb_condEstoque.getSelectedItem().equals("Estoque < 0")) {
            s = " HAVING Estoque  < 0 ";
        } else if (cb_condEstoque.getSelectedItem().equals("Estoque = 0")) {
            s = " HAVING Estoque  = 0";
        } else if (cb_condEstoque.getSelectedItem().equals("Todos")) {
            s = "";
        }
        return s;
    }

    private Date getDataAtual() {
        Date d = new Date(System.currentTimeMillis());
        Calendar c = Calendar.getInstance();
        //c.add(Calendar.DAY_OF_WEEK, 0);
        d = c.getTime();
        return d;
    }

    private void TipTextTbCompras() {
        tb_estoque.setToolTipText(null);
        int[] linha = tb_estoque.getSelectedRows();
        String texto = "";
        if (linha.length > 1) {
            Double SomaQtEntrada = 0.0;
            Double SomaQtEstoque = 0.0;
            Double SomaQtArea = 0.0;
            for (int i = 0; i < linha.length; i++) {
                SomaQtEntrada += (Double) TbEstoque.getValueAt(linha[i], TbEstoque.ENTRADAPERIODO);
                SomaQtEstoque += (Double) TbEstoque.getValueAt(linha[i], TbEstoque.ESTOQUE);
                SomaQtArea += (Double) TbEstoque.getValueAt(linha[i], TbEstoque.AREA);

            }
            texto = "<html><FONT FACE=\"Tahoma\" SIZE=3>"
                    + "Quantidade de Entrada: <B>" + String.valueOf(SomaQtEntrada) + "</B><br>"
                    + "Quantidade em Estoque: <B>" + String.valueOf(SomaQtEstoque) + "</B><br>"
                    + "Área Dísponível: <B>" + new DecimalFormat("#,###,##0.00 ha").format(SomaQtArea) + "</B><br>"
                    + "</FONT></html>";
            ToolTipManager.sharedInstance().setInitialDelay(150);
            ToolTipManager.sharedInstance().setDismissDelay(30000);
            tb_estoque.setToolTipText(texto);
        }
    }

    class CellRenderer extends DefaultTableCellRenderer {

        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
            setHorizontalAlignment(SwingConstants.CENTER);
            super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
            Object val = table.getValueAt(row, column);

            if (val instanceof BigDecimal) {
                BigDecimal valor = (BigDecimal) val;
                String Sifra = table.getValueAt(row, 12).toString();
                if (valor != null) {
                    setText(new DecimalFormat(Sifra + " #,###,##0.000").format(valor));
                    setHorizontalAlignment(SwingConstants.RIGHT);
                } else {
                    setText("");
                }
            } else if (val instanceof Double) {
                Double valorD = (Double) val;
                setText(new DecimalFormat("#,###,##0.000").format(valorD));
            }

            return this;
        }
    }

}
