/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Beans.ListCategoriaInsumos;
import Beans.ListFazendasBeans;
import DAO.Diversas;
import static GUI.Principal.EntradaInsumos;
import static GUI.Principal.ListFazPermitidas;
import static GUI.Principal.ListFazendas;
import static GUI.Principal.PedidosInsumos;
import Utilitarios.CentralizarTabela;
import Utilitarios.Conexao;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Bruno
 */
public class frmPesquisarPedInsumo extends javax.swing.JDialog {

    DefaultTableModel TbInsumos;
    CentralizarTabela Centralizar;
    Diversas DiversasD;
    public String nPedido;

    public frmPesquisarPedInsumo(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        nPedido = new String();
        DiversasD = new Diversas();
        getTablePesquisa();
        carregarFazPermitidas();
        getRootPane().setDefaultButton(btn_pesquisar);
    }

    private JTable getTablePesquisa(){
        TbInsumos = (DefaultTableModel) tb_insumos.getModel();
        Centralizar = new CentralizarTabela();
        Centralizar.centralizarTabela(tb_insumos);
        ((DefaultTableCellRenderer) tb_insumos.getTableHeader().getDefaultRenderer()).setHorizontalAlignment(SwingConstants.CENTER);
         return tb_insumos;
    }
    
    
    private void carregarFazPermitidas() {
        if (ListFazPermitidas == null) {
            ListFazPermitidas = new ArrayList<>();
            ListFazPermitidas = DiversasD.ListpmFazenda();
        }
        cb_fazenda.addItem("-");
        for (ListFazendasBeans list : ListFazPermitidas) {
            cb_fazenda.addItem(list);

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.JPanel jPanel2 = new javax.swing.JPanel();
        javax.swing.JPanel jPanel1 = new javax.swing.JPanel();
        javax.swing.JScrollPane jScrollPane1 = new javax.swing.JScrollPane();
        tb_insumos = new javax.swing.JTable();
        javax.swing.JPanel jPanel3 = new javax.swing.JPanel();
        javax.swing.JLabel jLabel1 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel2 = new javax.swing.JLabel();
        txt_nomeComercial = new javax.swing.JTextField();
        btn_pesquisar = new javax.swing.JButton();
        txt_fornecedor = new javax.swing.JTextField();
        javax.swing.JLabel jLabel3 = new javax.swing.JLabel();
        cb_fazenda = new javax.swing.JComboBox<>();

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Pesquisar Insumo");
        setModal(true);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tb_insumos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "id_pedido", "NÂº Pedido", "id_fornecedor", "Fornecedor", "Fazendal", "Id Categoria", "Categoria", "id_insumo", "Insumo", "Quant. Pedido", "Unidade", "Entregue", "Saldo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tb_insumos.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tb_insumos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tb_insumosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tb_insumos);
        if (tb_insumos.getColumnModel().getColumnCount() > 0) {
            tb_insumos.getColumnModel().getColumn(0).setResizable(false);
            tb_insumos.getColumnModel().getColumn(0).setPreferredWidth(60);
            tb_insumos.getColumnModel().getColumn(1).setMinWidth(0);
            tb_insumos.getColumnModel().getColumn(1).setPreferredWidth(0);
            tb_insumos.getColumnModel().getColumn(1).setMaxWidth(0);
            tb_insumos.getColumnModel().getColumn(3).setMinWidth(0);
            tb_insumos.getColumnModel().getColumn(3).setPreferredWidth(0);
            tb_insumos.getColumnModel().getColumn(3).setMaxWidth(0);
            tb_insumos.getColumnModel().getColumn(4).setPreferredWidth(120);
            tb_insumos.getColumnModel().getColumn(6).setMinWidth(0);
            tb_insumos.getColumnModel().getColumn(6).setPreferredWidth(0);
            tb_insumos.getColumnModel().getColumn(6).setMaxWidth(0);
            tb_insumos.getColumnModel().getColumn(7).setMinWidth(0);
            tb_insumos.getColumnModel().getColumn(7).setPreferredWidth(0);
            tb_insumos.getColumnModel().getColumn(7).setMaxWidth(0);
            tb_insumos.getColumnModel().getColumn(8).setMinWidth(0);
            tb_insumos.getColumnModel().getColumn(8).setPreferredWidth(0);
            tb_insumos.getColumnModel().getColumn(8).setMaxWidth(0);
            tb_insumos.getColumnModel().getColumn(9).setMinWidth(180);
            tb_insumos.getColumnModel().getColumn(9).setPreferredWidth(180);
            tb_insumos.getColumnModel().getColumn(9).setMaxWidth(180);
            tb_insumos.getColumnModel().getColumn(11).setMinWidth(40);
            tb_insumos.getColumnModel().getColumn(11).setPreferredWidth(40);
            tb_insumos.getColumnModel().getColumn(11).setMaxWidth(40);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 493, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 223, Short.MAX_VALUE)
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Fornecedor");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Nome Comercial");

        btn_pesquisar.setText("Pesquisar");
        btn_pesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_pesquisarActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Fazenda");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_fornecedor))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_nomeComercial, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cb_fazenda, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(btn_pesquisar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txt_fornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(cb_fazenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txt_nomeComercial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_pesquisar))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_pesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_pesquisarActionPerformed
        if (cb_fazenda.getSelectedIndex() > 0){
            buscarInsumo();
        } else {
             JOptionPane.showMessageDialog(null, "O campo fazenda Ã© obrigatÃ³rio!", "Erro", 0, new ImageIcon("imagens/btn_sair.png"));
        }
        
    }//GEN-LAST:event_btn_pesquisarActionPerformed

    private void tb_insumosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tb_insumosMouseClicked


    }//GEN-LAST:event_tb_insumosMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmPesquisarPedInsumo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmPesquisarPedInsumo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmPesquisarPedInsumo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmPesquisarPedInsumo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                frmPesquisarPedInsumo dialog = new frmPesquisarPedInsumo(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    javax.swing.JButton btn_pesquisar;
    javax.swing.JComboBox<Object> cb_fazenda;
    javax.swing.JTable tb_insumos;
    javax.swing.JTextField txt_fornecedor;
    javax.swing.JTextField txt_nomeComercial;
    // End of variables declaration//GEN-END:variables

    public void buscarInsumo() {
        Conexao.ReiniciarCon();
        
        String SQLSelection = "select  insumos_id as IdItemPed,"
                + "insumos_idPedido as IdPedido,"
                + "insumos_npedido as nPedido,"
                + "(select pedidos_codFornecedor from pedidos p where p.pedidos_id = pi.insumos_idPedido)  as IdFornecedor,"
                + "(select pedidos_fornecedor as fornecedor from pedidos p where p.pedidos_id = pi.insumos_idPedido)  as Fornecedor,"
                + "insumos_fazenda as Fazenda,"
                + "insumos_idCategoria as idCategoria,"
                + "insumos_nomeCat as Categoria,"
                + "insumos_idInsumo as idInsumo,"
                + "insumos_Insumo as insumo,"
                + "insumos_quant as quantPedido, "
                + "insumos_unid as Unidade, "
                + "@qtEntrega:= ifnull((SELECT sum(ent.ent_ins_quant) from ent_insumo ent where ent.idItemPedido = pi.insumos_id),0) as Entregue, "
                +  "insumos_quant - @qtEntrega as Saldo "
                + "from pedidos_insumos pi where insumos_status = 0 and " 
                + " (select pedidos_fornecedor as fornecedor from pedidos p where p.pedidos_id = pi.insumos_idPedido) like '%" + txt_fornecedor.getText() +  "%' " + SQLnPedido() + SQLFazenda() + SQLInsumo();
        try {
            PreparedStatement st = Conexao.getConnection().prepareStatement(SQLSelection);
            ResultSet rs = st.executeQuery();
            TbInsumos.setNumRows(0);
            while (rs.next()) {
                TbInsumos.addRow(new Object[]{rs.getInt("IdItemPed"), rs.getInt("IdPedido"), rs.getString("nPedido"),
                   rs.getInt("IdFornecedor") ,rs.getString("Fornecedor"), rs.getString("Fazenda"), rs.getInt("idCategoria"), rs.getString("Categoria"),
                    rs.getInt("idInsumo"), rs.getString("Insumo"), rs.getDouble("quantPedido"), rs.getString("Unidade"), rs.getDouble("Entregue") ,rs.getDouble("Saldo")});
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex + " Erro ao buscar insumos", "Erro", 0, new ImageIcon("imagens/btn_sair.png"));
        }
    }

    public String SQLnPedido() {
        String SQL = "";
        if(EntradaInsumos != null){
            nPedido = EntradaInsumos.txt_nPedido.getText();
        }
        if (nPedido != null){      
                SQL = " and insumos_npedido like '%" + nPedido + "%'";
        }
        return SQL;
    }
    
    public String SQLFazenda(){
        String s = "";
        if (cb_fazenda.getSelectedIndex() > 0){
            s = " and insumos_idFazenda = " + String.valueOf(getIdFazenda());
        }
        return s;
    }
    
    public String SQLInsumo(){
        String s = "";
        if (!txt_nomeComercial.getText().equals("")){
            s = " and insumos_Insumo like '" + txt_nomeComercial.getText() + "%'";
        }
        return s;
    }
    
    private Integer getIdFazenda(){
        return ListFazPermitidas.get(cb_fazenda.getSelectedIndex() -1).getID();
    }
    
}
